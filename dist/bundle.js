(()=>{var e={817:()=>{const e={categories:[],envVars:[],showMessage:null,async init(e){this.showMessage=e;try{await this.fetchFullEnvList()}catch(e){console.error("Error during initialization:",e),this.showMessage&&this.showMessage(-1,"Error loading environment variables")}this.renderCategoriesList()},async fetchFullEnvList(){const e=localStorage.getItem("nodeAPPToken");try{const t=await fetch(`${window.nodeAppBaseURL}/node-system/env-list-edit`,{headers:{nodeAPPToken:e}});if(!t.ok)throw new Error("Response from server is not OK");{const e=await t.json();this.envVars=Array.isArray(e)?e:[],this.categories=[...new Set(this.envVars.map((e=>e.category)))]}}catch(e){console.error("Error requesting full list of variables:",e),this.envVars=[],this.categories=[],this.showMessage&&this.showMessage(-1,"Failed to load environment variables")}},renderCategoriesList(){const e=document.getElementById("env-manager");if(!e)return void console.error("Element env-manager not found");e.innerHTML="";const t=document.createElement("button");if(t.textContent="Create new",t.className="mb-6 bg-green-500 hover:bg-green-600 text-white font-bold py-2 px-4 rounded-lg shadow-md transition-colors duration-200",t.addEventListener("click",(()=>this.showAddForm())),e.appendChild(t),0===this.categories.length){const t=document.createElement("p");return t.textContent="No environment variables available or an error occurred while loading them.",t.className="text-gray-400 mt-4",void e.appendChild(t)}this.categories.forEach(((t,n)=>{const s=document.createElement("div");s.className="mb-6 bg-dark-300 rounded-lg shadow-lg overflow-hidden border border-gray-700",s.innerHTML=`\n                <div class="p-3 cursor-pointer flex items-center bg-gradient-to-r from-dark-400 to-dark-500">\n                    <span class="toggle-icon mr-2 text-gray-400">▼</span>\n                    <h3 class="text-lg font-bold text-white flex-grow">${t}</h3>\n                </div>\n                <div class="category-content p-3" style="display: none;"></div>\n            `;const o=s.querySelector(".bg-gradient-to-r"),r=s.querySelector(".toggle-icon"),a=s.querySelector(".category-content");o.addEventListener("click",(()=>{a.style.display="none"===a.style.display?"block":"none",r.textContent="none"===a.style.display?"▼":"▲"})),this.envVars.filter((e=>e.category===t)).forEach((e=>{const t=document.createElement("div");t.className="mb-2 p-2 bg-dark-200 rounded-md hover:bg-dark-100 transition-colors duration-200",t.innerHTML=`\n                    <div class="flex justify-between items-center">\n                        <span class="font-bold text-gray-200">${e.key}</span>\n                        <button class="edit-btn text-blue-400 hover:text-blue-300">\n                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">\n                                <path d="M13.586 3.586a2 2 0 112.828 2.828l-.793.793-2.828-2.828.793-.793zM11.379 5.793L3 14.172V17h2.828l8.38-8.379-2.83-2.828z" />\n                            </svg>\n                        </button>\n                    </div>\n                    <div class="text-gray-300">${e.value}</div>\n                    ${e.description?`<div class="text-sm text-gray-400">${e.description}</div>`:""}\n                `,t.querySelector(".edit-btn").addEventListener("click",(()=>this.showEditForm(e))),a.appendChild(t)})),e.appendChild(s)}))},showEditForm(e){const t=document.getElementById("env-manager");if(!t)return void console.error("Element env-manager not found");const n=document.createElement("div");n.className="mb-4 p-4 bg-dark-100 rounded",n.innerHTML=`\n            <h3 class="text-lg font-bold mb-2 text-white">Edit variable</h3>\n            <p class="mb-2 text-white">Category: ${e.category}</p>\n            <p class="mb-2 text-white">Key: ${e.key}</p>\n            <input id="editValue" type="text" value="${e.value}" class="w-full p-2 mb-2 rounded bg-dark-200 text-white">\n            <textarea id="editDescription" class="w-full p-2 mb-2 rounded bg-dark-200 text-white">${e.description||""}</textarea>\n            <div class="flex justify-between items-center">\n                <div>\n                    <button id="saveEditButton" class="bg-green-500 hover:bg-green-600 text-white font-bold py-2 px-4 rounded">Save</button>\n                    <button id="cancelEditButton" class="bg-gray-500 hover:bg-gray-600 text-white font-bold py-2 px-4 rounded ml-2">Cancel</button>\n                </div>\n                <button id="removeButton" class="bg-red-500 hover:bg-red-600 text-white font-bold py-2 px-4 rounded">Remove</button>\n            </div>\n        `,t.innerHTML="",t.appendChild(n),document.getElementById("saveEditButton").addEventListener("click",(()=>this.saveEditedEnvVar(e))),document.getElementById("cancelEditButton").addEventListener("click",(()=>this.renderCategoriesList())),document.getElementById("removeButton").addEventListener("click",(()=>this.removeEnvVar(e)))},async saveEditedEnvVar(e){const t=document.getElementById("editValue").value,n=document.getElementById("editDescription").value;if(!t)return void(this.showMessage&&this.showMessage(-1,"Value is required"));const s={...e,value:t,description:n},o=localStorage.getItem("nodeAPPToken");try{const e=await fetch(`${window.nodeAppBaseURL}/node-system/env-update-entry`,{method:"POST",headers:{"Content-Type":"application/json",nodeAPPToken:o},body:JSON.stringify(s)}),t=await e.json();"OK"===t.result?(this.showMessage&&this.showMessage(1,"Updated"),await this.fetchFullEnvList(),this.renderCategoriesList()):this.showMessage&&this.showMessage(-1,t.result||"Error updating environment variable")}catch(e){console.error("Error updating environment variable:",e),this.showMessage&&this.showMessage(-1,"An error occurred while updating")}},showConfirmDialog(e,t,n){const s=document.createElement("div");s.className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50",s.innerHTML=`\n            <div class="bg-dark-100 p-6 rounded-lg shadow-xl">\n                <p class="text-white mb-4">${e}</p>\n                <div class="flex justify-end">\n                    <button id="confirmYes" class="bg-red-500 hover:bg-red-600 text-white font-bold py-2 px-4 rounded mr-2">Yes</button>\n                    <button id="confirmNo" class="bg-gray-500 hover:bg-gray-600 text-white font-bold py-2 px-4 rounded">No</button>\n                </div>\n            </div>\n        `,document.body.appendChild(s),s.querySelector("#confirmYes").addEventListener("click",(()=>{t(),document.body.removeChild(s)})),s.querySelector("#confirmNo").addEventListener("click",(()=>{n(),document.body.removeChild(s)}))},async removeEnvVar(e){this.showConfirmDialog("Are you sure you want to delete this variable?",(async()=>{const t=localStorage.getItem("nodeAPPToken");try{const n=await fetch(`${window.nodeAppBaseURL}/node-system/env-remove-entry`,{method:"DELETE",headers:{"Content-Type":"application/json",nodeAPPToken:t},body:JSON.stringify({category:e.category,key:e.key})});!0===(await n.json()).success?(this.showMessage&&this.showMessage(1,"Variable deleted"),await this.fetchFullEnvList(),this.renderCategoriesList()):this.showMessage&&this.showMessage(-1,"Error deleting environment variable")}catch(e){console.error("Error deleting environment variable:",e),this.showMessage&&this.showMessage(-1,"An error occurred while deleting")}}),(()=>{}))},showAddForm(){const e=document.getElementById("env-manager");if(!e)return void console.error("Element env-manager not found");const t=document.createElement("div");t.className="mb-4 p-4 bg-dark-100 rounded";const n=Array.isArray(this.categories)&&this.categories.length>0;t.innerHTML=`\n            <h3 class="text-lg font-bold mb-2 text-white">Create new variable</h3>\n            ${n?`\n            <select id="category" class="w-full p-2 mb-2 rounded bg-dark-200 text-white">\n                ${this.categories.map((e=>`<option value="${e}">${e}</option>`)).join("")}\n                <option value="new">New category</option>\n            </select>\n            `:""}\n            <input id="newCategory" type="text" placeholder="New category" class="w-full p-2 mb-2 rounded bg-dark-200 text-white" ${n?'style="display: none;"':""}>\n            <input id="key" type="text" placeholder="Key" class="w-full p-2 mb-2 rounded bg-dark-200 text-white">\n            <input id="value" type="text" placeholder="Value" class="w-full p-2 mb-2 rounded bg-dark-200 text-white">\n            <textarea id="description" placeholder="Description" class="w-full p-2 mb-2 rounded bg-dark-200 text-white"></textarea>\n            <button id="saveButton" class="bg-green-500 hover:bg-green-600 text-white font-bold py-2 px-4 rounded">Create</button>\n            <button id="cancelButton" class="bg-gray-500 hover:bg-gray-600 text-white font-bold py-2 px-4 rounded ml-2">Cancel</button>\n        `,e.innerHTML="",e.appendChild(t),n&&document.getElementById("category").addEventListener("change",(e=>{document.getElementById("newCategory").style.display="new"===e.target.value?"block":"none"})),document.getElementById("saveButton").addEventListener("click",(()=>this.saveEnvVar())),document.getElementById("cancelButton").addEventListener("click",(()=>this.renderCategoriesList()))},async saveEnvVar(){const e=document.getElementById("category"),t=document.getElementById("newCategory"),n=document.getElementById("key").value,s=document.getElementById("value").value,o=document.getElementById("description").value;let r;if(r=e&&"new"!==e.value?e.value:t.value,!r||!n||!s)return void(this.showMessage?this.showMessage(-1,"Category, key, and value are required"):console.error("Category, key, and value are required"));const a={category:r,key:n,value:s,description:o},i=localStorage.getItem("nodeAPPToken");try{const e=await fetch(`${window.nodeAppBaseURL}/node-system/env-add-entry`,{method:"POST",headers:{"Content-Type":"application/json",nodeAPPToken:i},body:JSON.stringify(a)}),t=await e.json();"OK"===t.result?(this.showMessage&&this.showMessage(1,"Variable added"),await this.fetchFullEnvList(),this.renderCategoriesList()):this.showMessage?this.showMessage(-1,t.result||"Error adding environment variable"):console.error(t.result||"Error adding environment variable")}catch(e){console.error("Error saving environment variable:",e),this.showMessage&&this.showMessage(-1,"An error occurred while saving")}}};window.EnvManager=e},141:()=>{const e={envVars:{},async fetchEnvVars(){const e=localStorage.getItem("nodeAPPToken");try{const t=await fetch(`${window.nodeAppBaseURL}/node-system/env-list-view`,{headers:{nodeAPPToken:e}});t.ok?(this.envVars=await t.json(),this.renderEnvVars()):(console.error("Error fetching data from Redis:",t.status,t.statusText),this.renderError(`Error fetching data from Redis: ${t.status} ${t.statusText}`))}catch(e){console.error("Error requesting data from Redis:",e),this.renderError(`Error requesting data from Redis: ${e.message}`)}},renderEnvVars(){const e=document.getElementById("env-redis");e.innerHTML='<h2 class="text-xl mb-4">Current variables tree</h2>';const t=document.createElement("pre");t.className="bg-dark-100 p-4 rounded overflow-auto",t.textContent=JSON.stringify(this.envVars,null,2),e.appendChild(t)},renderError(e){document.getElementById("env-redis").innerHTML=`<h2 class="text-xl mb-4">Error</h2><p class="text-red-500">${e}</p>`}};window.EnvRedis=e},803:()=>{const e={async init(){console.log("Starting init() execution"),this.showSpinner();const e=localStorage.getItem("nodeAPPToken");if(console.log("Token received:",e?"Token exists":"Token is missing"),e)try{await this.checkTokenValidity(e)?"envTab"===(localStorage.getItem("activeTab")||"envTab")?await this.showEnvManager():await this.showEnvRedis():(localStorage.removeItem("nodeAPPToken"),this.showAuth())}catch(e){console.error("Error during token check:",e),this.showAuth()}else this.showAuth()},showSpinner(){document.getElementById("spinner").classList.remove("hidden"),document.getElementById("auth").classList.add("hidden"),document.getElementById("env-manager").classList.add("hidden"),document.getElementById("env-redis").classList.add("hidden")},showAuth(){document.getElementById("spinner").classList.add("hidden"),document.getElementById("auth").classList.remove("hidden"),document.getElementById("env-manager").classList.add("hidden"),document.getElementById("env-redis").classList.add("hidden")},setActiveTab(e){document.querySelectorAll(".tab-button").forEach((e=>{e.classList.remove("active")})),document.getElementById(e).classList.add("active"),localStorage.setItem("activeTab",e)},async showEnvManager(){if(this.setActiveTab("envTab"),document.getElementById("spinner").classList.add("hidden"),document.getElementById("auth").classList.add("hidden"),document.getElementById("env-manager").classList.remove("hidden"),document.getElementById("env-redis").classList.add("hidden"),!window.EnvManager)return console.error("EnvManager is not defined"),void this.showMessage(-1,"Error: EnvManager is not loaded");try{window.envManager||(window.envManager=Object.create(window.EnvManager)),await window.envManager.init(this.showMessage)}catch(e){console.error("Error initializing environment manager:",e),this.showMessage(-1,"Error initializing environment manager"),this.showAuth()}},async showEnvRedis(){this.setActiveTab("redisTab"),document.getElementById("spinner").classList.add("hidden"),document.getElementById("auth").classList.add("hidden"),document.getElementById("env-manager").classList.add("hidden"),document.getElementById("env-redis").classList.remove("hidden");try{await EnvRedis.fetchEnvVars()}catch(e){console.error("Error loading Redis variables:",e),this.showAuth()}},async checkTokenValidity(e){try{return 200===(await fetch(`${window.nodeAppBaseURL}node-system/auth-token-check`,{method:"GET",headers:{nodeAPPToken:e}})).status}catch(e){return console.error("Error checking token validity:",e),!1}},async setupEventListeners(){document.getElementById("authForm").addEventListener("submit",(async e=>{e.preventDefault();const t=document.getElementById("accessToken").value;this.showSpinner(),await this.checkTokenValidity(t)?(localStorage.setItem("nodeAPPToken",t),this.showEnvManager()):(alert("Invalid token. Please try again."),this.showAuth())})),document.getElementById("envTab").addEventListener("click",(()=>{this.showSpinner(),this.showEnvManager()})),document.getElementById("redisTab").addEventListener("click",(()=>{this.showSpinner(),this.showEnvRedis()}))},showMessage(e,t,n=3e3){const s=document.getElementById("message-container"),o=document.getElementById("message-status"),r=document.getElementById("message-text");switch(e){case 1:o.className="w-3 h-3 rounded-full mr-2 bg-green-500";break;case 0:o.className="w-3 h-3 rounded-full mr-2 bg-white";break;case-1:o.className="w-3 h-3 rounded-full mr-2 bg-red-500"}r.textContent=t,s.classList.remove("hidden"),setTimeout((()=>{s.classList.add("hidden")}),n)},exec(){console.log("DOMContentLoaded triggered"),this.setupEventListeners(),console.log("setupEventListeners executed"),this.init().catch((e=>{console.error("Error during initialization:",e),this.showAuth()})),console.log("init() called")}};window.EnvMain=e,window.addEventListener("load",(()=>{window.EnvMain.exec()}))}},t={};function n(s){var o=t[s];if(void 0!==o)return o.exports;var r=t[s]={exports:{}};return e[s](r,r.exports,n),r.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var s in t)n.o(t,s)&&!n.o(e,s)&&Object.defineProperty(e,s,{enumerable:!0,get:t[s]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{"use strict";n(817),n(141),n(803)})()})();